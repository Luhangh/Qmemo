package com.luch.qmemo.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.luch.qmemo.entity.User;
import com.luch.qmemo.entity.NoteBook;
import com.luch.qmemo.entity.Balance;
import com.luch.qmemo.entity.Income;
import com.luch.qmemo.entity.IncomeChannel;
import com.luch.qmemo.entity.Note;
import com.luch.qmemo.entity.Spending;
import com.luch.qmemo.entity.SpendingChannel;

import com.luch.qmemo.greendao.UserDao;
import com.luch.qmemo.greendao.NoteBookDao;
import com.luch.qmemo.greendao.BalanceDao;
import com.luch.qmemo.greendao.IncomeDao;
import com.luch.qmemo.greendao.IncomeChannelDao;
import com.luch.qmemo.greendao.NoteDao;
import com.luch.qmemo.greendao.SpendingDao;
import com.luch.qmemo.greendao.SpendingChannelDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userDaoConfig;
    private final DaoConfig noteBookDaoConfig;
    private final DaoConfig balanceDaoConfig;
    private final DaoConfig incomeDaoConfig;
    private final DaoConfig incomeChannelDaoConfig;
    private final DaoConfig noteDaoConfig;
    private final DaoConfig spendingDaoConfig;
    private final DaoConfig spendingChannelDaoConfig;

    private final UserDao userDao;
    private final NoteBookDao noteBookDao;
    private final BalanceDao balanceDao;
    private final IncomeDao incomeDao;
    private final IncomeChannelDao incomeChannelDao;
    private final NoteDao noteDao;
    private final SpendingDao spendingDao;
    private final SpendingChannelDao spendingChannelDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        noteBookDaoConfig = daoConfigMap.get(NoteBookDao.class).clone();
        noteBookDaoConfig.initIdentityScope(type);

        balanceDaoConfig = daoConfigMap.get(BalanceDao.class).clone();
        balanceDaoConfig.initIdentityScope(type);

        incomeDaoConfig = daoConfigMap.get(IncomeDao.class).clone();
        incomeDaoConfig.initIdentityScope(type);

        incomeChannelDaoConfig = daoConfigMap.get(IncomeChannelDao.class).clone();
        incomeChannelDaoConfig.initIdentityScope(type);

        noteDaoConfig = daoConfigMap.get(NoteDao.class).clone();
        noteDaoConfig.initIdentityScope(type);

        spendingDaoConfig = daoConfigMap.get(SpendingDao.class).clone();
        spendingDaoConfig.initIdentityScope(type);

        spendingChannelDaoConfig = daoConfigMap.get(SpendingChannelDao.class).clone();
        spendingChannelDaoConfig.initIdentityScope(type);

        userDao = new UserDao(userDaoConfig, this);
        noteBookDao = new NoteBookDao(noteBookDaoConfig, this);
        balanceDao = new BalanceDao(balanceDaoConfig, this);
        incomeDao = new IncomeDao(incomeDaoConfig, this);
        incomeChannelDao = new IncomeChannelDao(incomeChannelDaoConfig, this);
        noteDao = new NoteDao(noteDaoConfig, this);
        spendingDao = new SpendingDao(spendingDaoConfig, this);
        spendingChannelDao = new SpendingChannelDao(spendingChannelDaoConfig, this);

        registerDao(User.class, userDao);
        registerDao(NoteBook.class, noteBookDao);
        registerDao(Balance.class, balanceDao);
        registerDao(Income.class, incomeDao);
        registerDao(IncomeChannel.class, incomeChannelDao);
        registerDao(Note.class, noteDao);
        registerDao(Spending.class, spendingDao);
        registerDao(SpendingChannel.class, spendingChannelDao);
    }
    
    public void clear() {
        userDaoConfig.clearIdentityScope();
        noteBookDaoConfig.clearIdentityScope();
        balanceDaoConfig.clearIdentityScope();
        incomeDaoConfig.clearIdentityScope();
        incomeChannelDaoConfig.clearIdentityScope();
        noteDaoConfig.clearIdentityScope();
        spendingDaoConfig.clearIdentityScope();
        spendingChannelDaoConfig.clearIdentityScope();
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public NoteBookDao getNoteBookDao() {
        return noteBookDao;
    }

    public BalanceDao getBalanceDao() {
        return balanceDao;
    }

    public IncomeDao getIncomeDao() {
        return incomeDao;
    }

    public IncomeChannelDao getIncomeChannelDao() {
        return incomeChannelDao;
    }

    public NoteDao getNoteDao() {
        return noteDao;
    }

    public SpendingDao getSpendingDao() {
        return spendingDao;
    }

    public SpendingChannelDao getSpendingChannelDao() {
        return spendingChannelDao;
    }

}
